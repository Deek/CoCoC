CC replaces the standard CC1 compiler driver program. CC was originally
written by Carl Kreider with additions by Pete Lyall. I have added the
ability to use the two pass CoCo version of the C compiler. I've also
added support of the -r=pathname option generated by the MAKE utility
from the CoCo OS9 LII Developers Pak.

This version of CC uses a ramdisk, if it is installed, for all the
temporary files, making it much faster. It also supports additional
compiler options like auto-inclusion of the CLIBT.L library, stop after
optimization (before assembly) and many others. Also included is a data
module, "ccdevice", that causes the compiler to use the device name in the
module (default is D0) as the default location of compiler files (LIB
and DEFS directories).

Included in this archive are the following files:

  cc.h        Header file for cc.c, three defines in this file may need
              to be changed before compilation, see notes below.

  cc.c        C source code for cc.

  cc          Compiled, executable version, set up for the two pass
              compiler, the rma assembler, and rlink linker.

  ccdevice.a  Source code for the ccdevice data module. Directions for
              assembly are included in the source code. This module must
              be loaded or merged with another module (I merged it with
              cc).

  readme      This file.


The following defines can be changed in cc.h:

#define TWOPASS   TRUE   /* change to FALSE for one pass compiler */
#define ASSEMBLER "rma"  /* change to c.asm if you don't have the dev pak */
#define LINKER  "rlink" /* change to c.link if you don't have the dev pak */


WARNING!

The programs c.pass2, c.opt and rma do not return any kind of error
condition after disk errors. This can cause some rather strange results
if you don't make your ram disk big enough to hold each temporary file.
The compile may seem to be continuing normally, but almost always fails
in the link step. Make sure you have plenty of free space for the temporary
files on you ram disk.


Bill Dickhaus [70325,523]

 opt -l
 csect
F$LINK rmb 1  Link to Module 
F$LOAD rmb 1  Load Module from File 
F$UNLINK rmb 1  Unlink Module 
F$FORK rmb 1  Start New Process 
F$WAIT rmb 1  Wait for Child Process to Die 
F$CHAIN rmb 1  Chain Process to New Module 
F$EXIT rmb 1  Terminate Process 
F$MEM rmb 1  Set Memory Size 
F$SEND rmb 1  Send Signal to Process 
F$ICPT rmb 1  Set Signal Intercept 
F$SLEEP rmb 1  Suspend Process 
F$SSPD rmb 1  Suspend Process 
F$ID rmb 1  Return Process ID 
F$SPRIOR rmb 1  Set Process Priority 
F$SSWI rmb 1  Set Software Interrupt 
F$PERR rmb 1  Print Error 
F$PRSNAM rmb 1  Parse Pathlist Name 
F$CMPNAM rmb 1  Compare Two Names 
F$SCHBIT rmb 1  Search Bit Map 
F$ALLBIT rmb 1  Allocate in Bit Map 
F$DELBIT rmb 1  Deallocate in Bit Map 
F$TIME rmb 1  Get Current Time 
F$STIME rmb 1  Set Current Time 
F$CRC rmb 1  Generate CRC 
F$GPRDSC rmb 1  get Process Descriptor copy 
F$GBLKMP rmb 1  get System Block Map copy 
F$GMODDR rmb 1  get Module Directory copy 
F$CPYMEM rmb 1  Copy External Memory 
F$SUSER rmb 1  Set User ID number 
F$UNLOAD rmb 1  Unlink Module by name 
 endsect

 csect $28
F$SRQMEM rmb 1  System Memory Request 
F$SRTMEM rmb 1  System Memory Return 
F$IRQ rmb 1  Enter IRQ Polling Table 
F$IOQU rmb 1  Enter I/O Queue 
F$APROC rmb 1  Enter Active Process Queue 
F$NPROC rmb 1  Start Next Process 
F$VMODUL rmb 1  Validate Module 
F$FIND64 rmb 1  Find Process/Path Descriptor 
F$ALL64 rmb 1  Allocate Process/Path Descriptor 
F$RET64 rmb 1  Return Process/Path Descriptor 
F$SSVC rmb 1  Service Request Table Initialization 
F$IODEL rmb 1  Delete I/O Module 
F$SLINK rmb 1  System Link 
F$BOOT rmb 1  Bootstrap System 
F$BTMEM rmb 1  Bootstrap Memory Request 
F$GPROCP rmb 1  Get Process ptr 
F$MOVE rmb 1  Move Data (low bound first) 
F$ALLRAM rmb 1  Allocate RAM blocks 
F$ALLIMG rmb 1  Allocate Image RAM blocks 
F$DELIMG rmb 1  Deallocate Image RAM blocks 
F$SETIMG rmb 1  Set Process DAT Image 
F$FREELB rmb 1  Get Free Low Block 
F$FREEHB rmb 1  Get Free High Block 
F$ALLTSK rmb 1  Allocate Process Task number 
F$DELTSK rmb 1  Deallocate Process Task number 
F$SETTSK rmb 1  Set Process Task DAT registers 
F$RESTSK rmb 1  Reserve Task number 
F$RELTSK rmb 1  Release Task number 
F$DATLOG rmb 1  Convert DAT Block/Offset to Logical 
F$DATTMP rmb 1  Make temporary DAT image 
F$LDAXY rmb 1  Load A [X,[Y]] 
F$LDAXYP rmb 1  Load A [X+,[Y]] 
F$LDDDXY rmb 1  Load D [D+X,[Y]] 
F$LDABX rmb 1  Load A from 0,X in task B 
F$STABX rmb 1  Store A at 0,X in task B 
F$ALLPRC rmb 1  Allocate Process Descriptor 
F$DELPRC rmb 1  Deallocate Process Descriptor 
F$ELINK rmb 1  Link using Module Directory Entry 
F$FMODUL rmb 1  Find Module Directory Entry 
F$MAPBLK rmb 1  Map Specific Block 
F$CLRBLK rmb 1  Clear Specific Block 
F$DELRAM rmb 1  Deallocate RAM blocks 
 endsect

 csect $80
I$ATTACH rmb 1  Attach I/O Device 
I$DETACH rmb 1  Detach I/O Device 
I$DUP rmb 1  Duplicate Path 
I$CREATE rmb 1  Create New File 
I$OPEN rmb 1  Open Existing File 
I$MAKDIR rmb 1  Make Directory File 
I$CHGDIR rmb 1  Change Default Directory 
I$DELETE rmb 1  Delete File 
I$SEEK rmb 1  Change Current Position 
I$READ rmb 1  Read Data 
I$WRITE rmb 1  Write Data 
I$READLN rmb 1  Read Line of ASCII Data 
I$WRITLN rmb 1  Write Line of ASCII Data 
I$GETSTT rmb 1  Get Path Status 
I$SETSTT rmb 1  Set Path Status 
I$CLOSE rmb 1  Close Path 
I$DELETX rmb 1  Delete from current exec dir 
 endsect

 csect
SS.OPT rmb 1  Read/Write PD Options 
SS.READY rmb 1  Check for Device Ready 
SS.SIZE rmb 1  Read/Write File Size 
SS.RESET rmb 1  Device Restore 
SS.WTRK rmb 1  Device Write Track 
SS.POS rmb 1  Get File Current Position 
SS.EOF rmb 1  Test for End of File 
SS.LINK rmb 1  Link to Status routines 
SS.ULINK rmb 1  Unlink Status routines 
SS.FEED rmb 1  issue form feed 
SS.FRZ rmb 1  Freeze DD_ information 
SS.SPT rmb 1  Set DD_TKS to given value 
SS.SQD rmb 1  Sequence down hard disk 
SS.DCMD rmb 1  Send direct command to disk 
SS.DEVNM rmb 1  Return Device name (32-bytes at [X]) 
SS.FD rmb 1  Return File Descriptor (Y-bytes at [X]) 
SS.TICKS rmb 1  Set Lockout honor duration 
SS.LOCK rmb 1  Lock/Release record 
SS.DSTAT rmb 1  Return Display Status (CoCo) 
SS.JOY rmb 1  Return Joystick Value (CoCo) 
SS.BLKRD rmb 1  Block Read 
SS.BLKWR rmb 1  Block Write 
SS.RETEN rmb 1  Retension cycle 
SS.WFM rmb 1  Write File Mark 
SS.RFM rmb 1  Read past File Mark 
SS.ELOG rmb 1  Read Error Log 
SS.SSIG rmb 1  Send signal on data ready 
SS.RELEA rmb 1  Release device 
 endsect

 csect $c8
E$PTHFUL rmb 1  Path Table full 
E$BPNUM rmb 1  Bad Path Number 
E$POLL rmb 1  Polling Table Full 
E$BMODE rmb 1  Bad Mode 
E$DEVOVF rmb 1  Device Table Overflow 
E$BMID rmb 1  Bad Module ID 
E$DIRFUL rmb 1  Module Directory Full 
E$MEMFUL rmb 1  Process Memory Full 
E$UNKSVC rmb 1  Unknown Service Code 
E$MODBSY rmb 1  Module Busy 
E$BPADDR rmb 1  Bad Page Address 
E$EOF rmb 1  End of File 
 rmb 1
E$NES rmb 1  Non-Existing Segment 
E$FNA rmb 1  File Not Accesible 
E$BPNAM rmb 1  Bad Path Name 
E$PNNF rmb 1  Path Name Not Found 
E$SLF rmb 1  Segment List Full 
E$CEF rmb 1  Creating Existing File 
E$IBA rmb 1  Illegal Block Address 
 rmb 1
E$MNF rmb 1  Module Not Found 
 rmb 1
E$DELSP rmb 1  Deleting Stack Pointer memory 
E$IPRCID rmb 1  Illegal Process ID 
 rmb 1
E$NOCHLD rmb 1  No Children 
E$ISWI rmb 1  Illegal SWI code 
E$PRCABT rmb 1  Process Aborted 
E$PRCFUL rmb 1  Process Table Full 
E$IFORKP rmb 1  Illegal Fork Parameter 
E$KWNMOD rmb 1  Known Module 
E$BMCRC rmb 1  Bad Module CRC 
E$USIGP rmb 1  Unprocessed Signal Pending 
E$NEMOD rmb 1  Non Existing Module 

E$BNAM rmb 1  Bad Name 
E$NORAM rmb 1  No Ram Available 
E$BPRCID rmb 1  Bad Process ID 
E$NOTASK rmb 1  No available Task number 
 rmb 1

E$UNIT rmb 1  Illegal Unit (drive) 
E$SECT rmb 1  Bad SECTor number 
E$WP rmb 1  Write Protect 
E$CRC rmb 1  Bad Check Sum 
E$READ rmb 1  Read Error 
E$WRITE rmb 1  Write Error 
E$NOTRDY rmb 1  Device Not Ready 
E$SEEK rmb 1  Seek Error 
E$FULL rmb 1  Media Full 
E$BTYP rmb 1  Bad Type (incompatable) media 
E$DEVBSY rmb 1  Device Busy 
E$DIDC rmb 1  Disk ID Change 
E$LOCK rmb 1  Record is busy (locked out) 
E$SHARE rmb 1  Non-sharable file busy 
E$DEADLK rmb 1  I/O Deadlock error 
 endsect
 opt l
